services:

    tenants_api:
        container_name: ${API_CONTAINER_NAME}
        image: ${API_CONTAINER_IMAGE_NAME}
        restart: unless-stopped
        build:
            context: .
            dockerfile: etc/frankenphp/Dockerfile
        volumes:
            - caddy_data:/data
            - caddy_config:/config
        networks:
            - tenants_network
        healthcheck:
            test: [ "CMD-SHELL", "curl -fsSL https://${API_SERVER_NAME}/healthcheck || exit 1" ]
            interval: 1s
            timeout: 5s
            retries: 3
        ports:
            # HTTP
            - target: 80
              published: 80
              protocol: tcp
            # HTTPS
            - target: 443
              published: 443
              protocol: tcp
            # HTTP/3
            - target: 443
              published: 443
              protocol: udp
        depends_on:
            tenants_common_db:
                condition: service_healthy


    # Mercure is installed as a Caddy module, prevent the Flex recipe from installing another service
    ###> symfony/mercure-bundle ###
    ###< symfony/mercure-bundle ###

    ###> doctrine/doctrine-bundle ###
    tenants_common_db:
        container_name: ${COMMON_POSTGRES_DB_CONTAINER_NAME}
        image: ${COMMON_POSTGRES_DB_CONTAINER_NAME}
        restart: unless-stopped
        build:
            context: .
            dockerfile: etc/postgresql/Dockerfile
        environment:
            POSTGRES_DB: ${COMMON_POSTGRES_DB}
            POSTGRES_PASSWORD: ${COMMON_POSTGRES_PASSWORD}
            POSTGRES_USER: ${COMMON_POSTGRES_USER}
        ports:
            - "5432:5432"
        healthcheck:
            test: ["CMD", "pg_isready", "-d", "${COMMON_POSTGRES_DB}", "-U", "${COMMON_POSTGRES_USER}"]
            timeout: 5s
            retries: 5
            start_period: 60s
        networks:
            - tenants_network
        volumes:
            - tenants_common_db:/var/lib/postgresql/data:rw
            # Uncomment next line to use a bind-mounted host directory for double backup!
            # - ./etc/postgres/data/common:/var/lib/postgresql/data:rw
    ###< doctrine/doctrine-bundle ###

volumes:
    caddy_data:
    caddy_config:
    tenants_common_db:

networks:
    tenants_network:
